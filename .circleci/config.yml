version: 2.1
orbs:
  python: circleci/python@2.1.1

jobs:
  test: # this can be any name you choose
    executor: python/default # use the default executor defined within the orb
    steps:
      - checkout # checkout source code
      - python/install-packages:
          pkg-manager: pip
      - run:
          name: Run tests
          command: coverage run -m pytest
      - run:
          name: Run coverage report
          command: coverage report
  build:
    docker:
      - image: python:3.10.9-alpine
    steps:
      - checkout
      - setup_remote_docker
      - run:
          docker build -t antho78780/letting_test:latest
      - run:
          docker push antho78780/letting_test:latest
  
workflows:
  test_deploy:
    jobs:
      - test
  build_deploy:
    jobs:
      - build
















# # Use the latest 2.1 version of CircleCI pipeline process engine.
# # See: https://circleci.com/docs/configuration-reference
# version: 2.1
# orbs:
#   python: circleci/python@2.1.1

# # Define a job to be invoked later in a workflow.
# # See: https://circleci.com/docs/configuration-reference/#jobs
# jobs:
#   say-hello:
#     executor: python/default
#     # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
#     # See: https://circleci.com/docs/configuration-reference/#executor-job
#     docker:
#       - image: cimg/base:stable
#     # Add steps to the job
#     # See: https://circleci.com/docs/configuration-reference/#steps
#     steps:
#       - checkout
#       - python/install-packages:
#           pkg-manager: pip 
#       - run:
#           name: "Say hello"
#           command: "echo Hello, World!"

# # Orchestrate jobs using workflows
# # See: https://circleci.com/docs/configuration-reference/#workflows
# workflows:
#   say-hello-workflow:
#     jobs:
#       - say-hello
